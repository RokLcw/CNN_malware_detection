import os
import pandas as pd
import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
from keras.preprocessing.image import ImageDataGenerator
from PIL import Image
import pefile
import sys

# text + data 이미지화 -> 이미지 size 4096*4096으로 고정

data = pd.DataFrame()   # columns=['binary']

folder_path = "./capstone_sample"
folder_lists = os.listdir(folder_path)

width = 4096
height = 4096

for folder in folder_lists: 
    cnt = 0
    file_path = os.path.join(folder_path, folder)
    file_lists = os.listdir(file_path)


    for file in file_lists:
        check = 0
        pe = pefile.PE(file_path+"\\"+file, fast_load=True)
        for section in pe.sections:
            if '.text' in str(section.Name):
                entry = section.PointerToRawData - 1
                end = section.SizeOfRawData + entry
                raw_data = pe.__data__[entry:end]
                data = raw_data
            if '.data' in str(section.Name):
                entry = section.PointerToRawData - 1
                end = section.SizeOfRawData + entry
                raw_data = pe.__data__[entry:end]
                data2 = raw_data
        np.hstack([data, data2])

        image = Image.new('L', (width, height))
        image.putdata(data)
        image = image.resize((64, 64))

        if cnt < 8000:
            if 'abnormal' in folder:
                imagename = f"./CNN/PE_basic(text_data)_IMG(size_fix)/Train/{folder}/{file}.png"
            if 'normal' in folder:
                imagename = f"./CNN/PE_basic(text_data)_IMG(size_fix)/Train/{folder}/{file}.png"
        else:
            if 'abnormal' in folder:
                imagename = f"./CNN/PE_basic(text_data)_IMG(size_fix)/Test/{folder}/{file}.png"
            if 'normal' in folder:
                imagename = f"./CNN/PE_basic(text_data)_IMG(size_fix)/Test/{folder}/{file}.png"
        
        image.save(imagename)

        cnt += 1

    print(folder, " cnt: ", cnt)

print("전처리 완료")